{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Proactive Backend API",
    "description": "API documentation for Proactive Backend"
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "schemes": ["http"],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT token format: Bearer {token}"
    }
  },
  "paths": {
    "/user/signup": {
      "post": {
        "summary": "Sign up a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserSignupRequest"
            }
          }
        ],
        "responses": {
          "201": { "description": "User created successfully" },
          "400": { "description": "Email already exists" }
        }
      }
    },
    "/user/verify-otp": {
      "post": {
        "summary": "Verify user OTP",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OtpVerificationRequest"
            }
          }
        ],
        "responses": {
          "200": { "description": "OTP verified successfully" },
          "400": { "description": "Invalid OTP" }
        }
      }
    },
    "/user/login": {
      "post": {
        "summary": "Login a user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": { "description": "Login successful" },
          "400": { "description": "Invalid credentials" }
        }
      }
    },
    "/speaker/signup": {
      "post": {
        "summary": "Sign up a new speaker",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SpeakerSignupRequest"
            }
          }
        ],
        "responses": {
          "201": { "description": "Speaker created successfully" },
          "400": { "description": "Email already exists" }
        }
      }
    },
    "/speaker/verify-otp": {
      "post": {
        "summary": "Verify speaker OTP",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OtpVerificationRequest"
            }
          }
        ],
        "responses": {
          "200": { "description": "OTP verified successfully" },
          "400": { "description": "Invalid OTP" }
        }
      }
    },
    "/speaker/login": {
      "post": {
        "summary": "Login a speaker",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": { "description": "Login successful" },
          "400": { "description": "Invalid credentials" }
        }
      }
    },
    "/speakers/setup-profile": {
      "post": {
        "summary": "Setup speaker profile",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetupProfileRequest"
            }
          }
        ],
        "responses": {
          "201": { "description": "Profile setup successfully" },
          "400": { "description": "Error in profile setup" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/speakers/list": {
      "get": {
        "summary": "Get all speakers",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": { "description": "List of speakers" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/bookings/book": {
      "post": {
        "summary": "Create a new booking",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateBookingRequest"
            }
          }
        ],
        "responses": {
          "201": { "description": "Booking created successfully" },
          "400": { "description": "Error in creation" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/bookings/my-bookings": {
      "get": {
        "summary": "Get user's bookings",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": { "description": "List of user's bookings" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/bookings/cancel/{id}": {
      "delete": {
        "summary": "Cancel booking by ID",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the booking"
          }
        ],
        "responses": {
          "200": { "description": "Booking cancelled successfully" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Booking not found" }
        }
      }
    }
  },
  "definitions": {
    "UserSignupRequest": {
      "type": "object",
      "properties": {
        "firstName": { "type": "string" },
        "lastName": { "type": "string" },
        "email": { "type": "string" },
        "password": { "type": "string" }
      },
      "required": ["firstName", "lastName", "email", "password"]
    },
    "SpeakerSignupRequest": {
      "type": "object",
      "properties": {
        "firstName": { "type": "string" },
        "lastName": { "type": "string" },
        "email": { "type": "string" },
        "password": { "type": "string" }
      },
      "required": ["firstName", "lastName", "email", "password"]
    },
    "OtpVerificationRequest": {
      "type": "object",
      "properties": {
        "email": { "type": "string" },
        "otp": { "type": "integer" }
      },
      "required": ["email", "otp"]
    },
    "LoginRequest": {
      "type": "object",
      "properties": {
        "email": { "type": "string" },
        "password": { "type": "string" }
      },
      "required": ["email", "password"]
    },
    "SetupProfileRequest": {
      "type": "object",
      "properties": {
        "expertise": { "type": "string" },
        "pricePerSession": { "type": "number" }
      },
      "required": ["expertise", "pricePerSession"]
    },
    "CreateBookingRequest": {
      "type": "object",
      "properties": {
        "speakerId": { "type": "integer" },
        "date": { "type": "string", "format": "date" },
        "timeSlot": { "type": "string" }
      },
      "required": ["speakerId", "date", "timeSlot"]
    }
  }
}